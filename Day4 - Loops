Loops are used to execute a block of code repeatedly until a specified condition is met.

1. Types of Loops in JavaScript

1.1 for Loop
Used when the number of iterations is known.
Syntax:

for (initialization; condition; increment/decrement) {
    // Code to execute
}

Example:
for (let i = 0; i < 5; i++) {
    console.log(i); // Outputs 0 to 4
}

1.2 while Loop
Executes as long as the condition is true.
Syntax:
while (condition) {
    // Code to execute
}
Example:
let i = 0;
while (i < 5) {
    console.log(i); // Outputs 0 to 4
    i++;
}

1.3 do...while Loop
Executes at least once, even if the condition is false.
Syntax:
do {
    // Code to execute
} while (condition);
Example:

javascript
Copy code
let i = 0;
do {
    console.log(i); // Outputs 0 to 4
    i++;
} while (i < 5);

1.4 for...in Loop
Iterates over the properties of an object.
Syntax:
for (key in object) {
    // Code to execute
}
Example:

let person = { name: "Alice", age: 25 };
for (let key in person) {
    console.log(key, person[key]); // Outputs: name Alice, age 25
}

1.5 for...of Loop
Iterates over iterable objects (like arrays, strings).
Syntax:
for (element of iterable) {
    // Code to execute
}
Example:

let fruits = ["Apple", "Banana", "Cherry"];
for (let fruit of fruits) {
    console.log(fruit); // Outputs: Apple, Banana, Cherry
}

2. Key Points
Use for for fixed iterations.
Use while when the number of iterations depends on a condition.
Use do...while if you need at least one execution.
Use for...in for objects and for...of for arrays or strings.
